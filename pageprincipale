#Importation des bibliothèques nécessaires
import pygame
import pygame_menu
from pygame.locals import *
from pygame_menu import sound

#Initialisation de la bibliothèque Pygame
pygame.init()
gamename = pygame.display.set_caption("Onlife")

#Création de la fenêtre
width = 1200
height = 800
background_colour = (255,153,153)
fenetre = pygame.display.set_mode((width,height))
fenetre.fill(background_colour)

# couleur texte
color = (255,255,255)

# couleur clair
color_light = (170,170,170)

# couleur sombre
color_dark = (100,100,100)

# police
smallfont = pygame.font.SysFont('Corbel',35)

# texte
nom = smallfont.render('Nom:' , True , color)
age = smallfont.render('Age:' , True , color)
education = smallfont.render('Education' , True , color)
propriete = smallfont.render('Propriete' , True , color)
bienetre = smallfont.render('Bien-etre' , True , color)
quitter = smallfont.render('Quitter' , True , color)
annee = smallfont.render('+ une annee' , True , color)

#Variable qui continue la boucle si = True, stoppe si = False
fin = False

#Boucle infinie
while not fin:
    pygame.draw.rect(fenetre, (255,204,204), pygame.Rect(50, 50, width-100, height-100))
    perso = pygame.image.load("bebe.png").convert_alpha()
    fenetre.blit(perso, (1,200))
    for event in pygame.event.get():   #On parcours la liste de tous les événements reçus
        if event.type == QUIT:     #Si un de ces événements est de type QUIT
            fin = True      #On arrête la boucle
        #verifie si la souris est cliquee
        if event.type == pygame.MOUSEBUTTONDOWN:
            if 525 <= mouse[0] <= 525+200 and 400 <= mouse[1] <= 400+50:
                print("e")
            if 900 <= mouse[0] <= 900+200 and 250 <= mouse[1] <= 250+50:
                print("a")
            if 900 <= mouse[0] <= 900+200 and 350 <= mouse[1] <= 350+50:
                print("b")
            if 900 <= mouse[0] <= 900+200 and 450 <= mouse[1] <= 450+50:
                print("c")
            # bouton quitter
            if 900 <= mouse[0] <= 900+200 and 550 <= mouse[1] <= 550+50:
                pygame.quit()

    # Position de la souris
    mouse = pygame.mouse.get_pos()

    # bouton etudes et metiers
    if 900 <= mouse[0] <= 900+200 and 250 <= mouse[1] <= 250+50:
        pygame.draw.rect(fenetre,color_light,[900,250,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,250,200,50])

    # bouton propriete
    if 900 <= mouse[0] <= 900+200 and 350 <= mouse[1] <= 350+50:
        pygame.draw.rect(fenetre,color_light,[900,350,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,350,200,50])

    # bouton bien etre
    if 900 <= mouse[0] <= 900+200 and 450 <= mouse[1] <= 450+50:
        pygame.draw.rect(fenetre,color_light,[900,450,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,450,200,50])

    # bouton quitter
    if 900 <= mouse[0] <= 900+200 and 550 <= mouse[1] <= 550+50:
        pygame.draw.rect(fenetre,color_light,[900,550,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,550,200,50])

    # bouton annee
    if 525 <= mouse[0] <= 525+200 and 400 <= mouse[1] <= 400+50:
        pygame.draw.rect(fenetre,color_light,[525,400,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[525,400,200,50])

    # identite sur rectangle par superposition
    pygame.draw.rect(fenetre,color_dark,[100,100,300,100])
    fenetre.blit(nom , (110,110))
    fenetre.blit(age , (110,150))

    # texte sur bouton par superposition
    fenetre.blit(annee , (540,410))
    fenetre.blit(education , (933,260))
    fenetre.blit(propriete , (937,360))
    fenetre.blit(bienetre , (937,460))
    fenetre.blit(quitter , (950,560))

    # updates the frames of the game
    pygame.display.update()
