#Importation des bibliothèques nécessaires
import pygame
from pygame.locals import *

#Importation des bibliothèques nécessaires
import pygame
from pygame.locals import *

#Initialisation de la bibliothèque Pygame
pygame.init()

#Création de la fenêtre
width = 1200
height = 800
background_colour = (255,153,153)
fenetre = pygame.display.set_mode((width,height))
fenetre.fill(background_colour)
gamename = pygame.display.set_caption("Onlife")
icon = pygame.image.load('icon.png').convert_alpha()
gameicon = pygame.display.set_icon(icon)

#variable de l'age
variableage = 0

# couleur texte
color = (255,255,255)

# couleur clair
color_light = (170,170,170)

# couleur sombre
color_dark = (100,100,100)

# police
smallfont = pygame.font.SysFont('comicsansms',35)

# texte
nom = smallfont.render('Nom:' , True , color)
age = smallfont.render('Age:'+"  "+str(variableage) , True , color)
education = smallfont.render('Education' , True , color)
propriete = smallfont.render('Propriete' , True , color)
bienetre = smallfont.render('Bien-etre' , True , color)
quitter = smallfont.render('Quitter' , True , color)
plus = smallfont.render('+' , True , color)
annee = smallfont.render('une annee' , True , color)
retour = smallfont.render('retour' , True , color)

#Variable qui continue la boucle si = True, stoppe si = False
fin = False
edu=False
prop=False
bien=False


#Boucle infinie
while not fin:
    pygame.draw.rect(fenetre, (255,204,204), pygame.Rect(50, 50, width-100, height-100))
    perso = pygame.image.load("bebe.png").convert_alpha()
    fenetre.blit(perso, (1,200))
    # Position de la souris
    mouse = pygame.mouse.get_pos()
    for event in pygame.event.get():   #On parcours la liste de tous les événements reçus
        if event.type == QUIT:     #Si un de ces événements est de type QUIT
            fin = True      #On arrête la boucle
            pygame.display.quit()
        #verifie si la souris est cliquee
        if event.type == pygame.MOUSEBUTTONDOWN:
            if 525 <= mouse[0] <= 525+200 and 350 <= mouse[1] <= 350+100:
                variableage = variableage+1
                age = smallfont.render('Age:'+"  "+str(variableage) , True , color)

            # ouverture page education
            if 900 <= mouse[0] <= 900+200 and 250 <= mouse[1] <= 250+50:
                edu=True
                while edu:
                    pygame.display.update()
                    fenetreedu = pygame.display.set_mode((width,height))
                    fenetreedu.fill(background_colour)
                    mouse = pygame.mouse.get_pos()
                    if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                        pygame.draw.rect(fenetreedu,color_light,[50,50,125,50])
                    else:
                        pygame.draw.rect(fenetreedu,color_dark,[50,50,125,50])
                    fenetre.blit(retour , (60,50))
                    for event in pygame.event.get():
                        if event.type == pygame.MOUSEBUTTONDOWN:
                            if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                                pygame.display.update()
                                edu=False

            # ouverture page propriete
            if 900 <= mouse[0] <= 900+200 and 350 <= mouse[1] <= 350+50:
                prop=True
                while prop:
                    pygame.display.update()
                    fenetreprop = pygame.display.set_mode((width,height))
                    fenetreprop.fill(background_colour)
                    mouse = pygame.mouse.get_pos()
                    if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                        pygame.draw.rect(fenetreprop,color_light,[50,50,125,50])
                    else:
                        pygame.draw.rect(fenetreprop,color_dark,[50,50,125,50])
                    fenetre.blit(retour , (60,50))
                    for event in pygame.event.get():
                        if event.type == pygame.MOUSEBUTTONDOWN:
                            if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                                pygame.display.update()
                                prop=False

            # ouverture page bien-etre
            if 900 <= mouse[0] <= 900+200 and 450 <= mouse[1] <= 450+50:
                bien=True
                while bien:
                    pygame.display.update()
                    fenetrebien = pygame.display.set_mode((width,height))
                    fenetrebien.fill(background_colour)
                    mouse = pygame.mouse.get_pos()
                    if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                        pygame.draw.rect(fenetrebien,color_light,[50,50,125,50])
                    else:
                        pygame.draw.rect(fenetrebien,color_dark,[50,50,125,50])
                    fenetre.blit(retour , (60,50))
                    for event in pygame.event.get():
                        if event.type == pygame.MOUSEBUTTONDOWN:
                            if 50 <= mouse[0] <= 125+50 and 50 <= mouse[1] <= 50+50:
                                pygame.display.update()
                                bien=False
            # bouton quitter
            if 900 <= mouse[0] <= 900+200 and 550 <= mouse[1] <= 550+50:
                pygame.quit()


    # bouton education
    if 900 <= mouse[0] <= 900+200 and 250 <= mouse[1] <= 250+50:
        pygame.draw.rect(fenetre,color_light,[900,250,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,250,200,50])

    # bouton propriete
    if 900 <= mouse[0] <= 900+200 and 350 <= mouse[1] <= 350+50:
        pygame.draw.rect(fenetre,color_light,[900,350,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,350,200,50])

    # bouton bien etre
    if 900 <= mouse[0] <= 900+200 and 450 <= mouse[1] <= 450+50:
        pygame.draw.rect(fenetre,color_light,[900,450,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,450,200,50])

    # bouton quitter
    if 900 <= mouse[0] <= 900+200 and 550 <= mouse[1] <= 550+50:
        pygame.draw.rect(fenetre,color_light,[900,550,200,50])
    else:
        pygame.draw.rect(fenetre,color_dark,[900,550,200,50])

    # bouton annee
    if 525 <= mouse[0] <= 525+200 and 350 <= mouse[1] <= 350+100:
        pygame.draw.rect(fenetre,color_light,[525,350,200,100])
    else:
        pygame.draw.rect(fenetre,color_dark,[525,350,200,100])

    # identite sur rectangle par superposition
    pygame.draw.rect(fenetre,color_dark,[100,100,300,100])
    fenetre.blit(nom , (105,105))
    fenetre.blit(age , (105,145))

    # texte sur bouton par superposition
    fenetre.blit(plus , (615,350))
    fenetre.blit(annee , (546,390))
    fenetre.blit(education , (923,250))
    fenetre.blit(propriete , (925,350))
    fenetre.blit(bienetre , (922,450))
    fenetre.blit(quitter , (935,550))

    # updates the frames of the game
    pygame.display.update()
    pygame.display.flip()
